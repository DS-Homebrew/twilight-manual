name: Build pages for TWiLight Menu++

on:
  push:
    branches: ["*"]
    paths-exclude: [README.md, crowdin.yml]

jobs:
  build:
    name: Build pages

    runs-on: ubuntu-latest
    strategy:
      matrix:
        deno-version: [1.10.2]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install ffmpeg jq p7zip-full -y
      - name: Use Deno Version ${{ matrix.deno-version }}
        uses: denolib/setup-deno@v2
        with:
          deno-version: ${{ matrix.deno-version }}
      - name: Build Deno Module
        run: |
          PUPPETEER_PRODUCT=chrome deno run --unstable --allow-env --allow-net --allow-read=/tmp,~/.cache/deno/deno_puppeteer --allow-write=/tmp,~/.cache/deno/deno_puppeteer https://deno.land/x/puppeteer@5.5.1/install.ts
          deno run --unstable --allow-env --allow-run --allow-net=127.0.0.1,manual.ds-homebrew.com --allow-read=nitrofiles/,pages/,/tmp,~/.cache/deno/deno_puppeteer,screenshot.png,palette.png,CNAME --allow-write=nitrofiles/,/tmp,~/.cache/deno/deno_puppeteer,screenshot.png,palette.png deno.js web
      - name: Pack 7z Package for nightly
        run: |
          cd nitrofiles
          7z a ../pages.7z pages
      - name: Upload to pages release
        run: |
          ID=35207926
          AUTH_HEADER="Authorization: token ${{ secrets.GITHUB_TOKEN }}"

          # Update description
          UPLOAD_URL="https://api.github.com/repos/${{ github.repository }}/releases/$ID"
          curl -XPATCH -H "$AUTH_HEADER" "$UPLOAD_URL" -d "{\"body\": \"This release always has the latest page files\n\nLast updated: $(git rev-parse --short HEAD)\"}"

          # Delete old file
          ASSET_ID=$(curl https://api.github.com/repos/${{ github.repository }}/releases/$ID/assets | jq --raw-output '.[0].id')
          UPLOAD_URL="https://api.github.com/repos/${{ github.repository }}/releases/assets/$ASSET_ID"
          curl -XDELETE -H "$AUTH_HEADER" "$UPLOAD_URL"

          # Upload new file
          CONTENT_LENGTH="Content-Length: $(stat -c%s pages.7z)"
          CONTENT_TYPE="Content-Type: application/7z-x-compressed"
          UPLOAD_URL="https://uploads.github.com/repos/${{ github.repository }}/releases/$ID/assets?name=pages.7z"
          curl -XPOST -H "$AUTH_HEADER" -H "$CONTENT_LENGTH" -H "$CONTENT_TYPE" --upload-file pages.7z "$UPLOAD_URL"
